import type { NextPage } from "next";

import { ReactElement, useState, Fragment } from "react";
import Head from "next/head";
import Layout from "../components/Layout";
import ListCourses from "../components/ListCourses";
import { Listbox, Transition } from "@headlessui/react";
import { CheckIcon, SelectorIcon } from "@heroicons/react/solid";
import Subscribe from "../components/Subscribe";

const Courses = () => {
  const data = [
    {
      label: "Categories",
      value: "Web Development",
      child: [""],
    },
  ];

  return (
    <div className={"font-Inter text-sm"}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="absolute bg-#F0F4F9 h-1/3 left-0 right-0" />
      <div className="relative space-y-6 pt-12">
        <div className="container mx-auto max-w-5xl space-y-6">
          <div>
            <div className="text-#FDC800">Course Category</div>
            <div className="font-CormorantGaramond text-4xl font-semibold">
              Web Development
            </div>
          </div>
          <div className="grid grid-cols-4 gap-4">
            <OptionItem label={"Categories"} />
            <OptionItem label={"All Level"} />
            <OptionItem label={"Language"} />
            <OptionItem label={"Instruktur"} />
          </div>
        </div>
        <ListCourses />
        <Subscribe />
      </div>
    </div>
  );
};

function OptionItem(props: { label: String; data?: Array<any> }) {
  const people = [
    { name: "Wade Cooper" },
    { name: "Arlene Mccoy" },
    { name: "Devon Webb" },
    { name: "Tom Cook" },
    { name: "Tanya Fox" },
    { name: "Hellen Schmidt" },
  ];
  const [selected, setSelected] = useState(people[0]);

  return (
    <div>
      <label className="font-Inter font-bold">{props.label}</label>
      <Listbox value={selected} onChange={setSelected}>
        <div className="relative mt-1 z-50">
          <Listbox.Button className="relative w-full py-2 pl-3 pr-10 text-left bg-white rounded-md border border-#BDBDBD cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm">
            <span className="block truncate">{selected.name}</span>
            <span className="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
              <SelectorIcon
                className="w-5 h-5 text-gray-400"
                aria-hidden="true"
              />
            </span>
          </Listbox.Button>
          <Transition
            as={Fragment}
            leave="transition ease-in duration-100"
            leaveFrom="opacity-100"
            leaveTo="opacity-0"
          >
            <Listbox.Options className="absolute w-full py-1 mt-1 overflow-auto text-base bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm">
              {people.map((person, personIdx) => (
                <Listbox.Option
                  key={personIdx}
                  className={({ active }) =>
                    `cursor-default select-none relative py-2 pl-10 pr-4 ${
                      active ? "text-amber-900 bg-amber-100" : "text-gray-900"
                    }`
                  }
                  value={person}
                >
                  {({ selected }) => (
                    <>
                      <span
                        className={`block truncate ${
                          selected ? "font-medium" : "font-normal"
                        }`}
                      >
                        {person.name}
                      </span>
                      {selected ? (
                        <span className="absolute inset-y-0 left-0 flex items-center pl-3 text-amber-600">
                          <CheckIcon className="w-5 h-5" aria-hidden="true" />
                        </span>
                      ) : null}
                    </>
                  )}
                </Listbox.Option>
              ))}
            </Listbox.Options>
          </Transition>
        </div>
      </Listbox>
    </div>
  );
}

Courses.getLayout = function getLayout(page: ReactElement) {
  return <Layout>{page}</Layout>;
};

export default Courses;
